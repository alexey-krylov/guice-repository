#labels thread-safe,EntityManager
Note, that all Repositories is not thread-safe, because they works directly with EntityManager instance, which is also not thread-safe. 

Here is an example of concurrent Repository usage:
{{{
   @Inject
   private Provider<UserRepository> userRepositoryProvider;

       // this method can be used concurrently
       public void threadSafeRepoUsageMethod() {
           // use personal instance per Thread via .get()
           UserRepository repo = userRepositoryProvider.get();
           repo.save(new User("login", "password"));
           repo.someOtherRepoMethod();
       }
}}}

Some theory regarding to this JPA aspect can be found here:
 * [http://docs.oracle.com/javaee/6/tutorial/doc/bnbqw.html]
 * [http://javanotepad.blogspot.com/2007/08/managing-jpa-entitymanager-lifecycle.html]
 * [http://docs.jboss.org/hibernate/core/3.6/reference/en-US/html_single/#transactions-basics-issues] (see information about Session, because it is an underlying EntityManager implementation for Hibernate ORM)